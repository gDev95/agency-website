{"ast":null,"code":"var _jsxFileName = \"/home/paul/Documents/Coding/agency-website/components/artist-list.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Grid from \"@material-ui/core/Grid\";\nimport gql from \"graphql-tag\";\nimport ArtistItem from \"./artist-item\";\nimport { useQuery } from \"@apollo/react-hooks\";\nexport const ALL_ARTISTS_QUERY = gql`\n\tquery Artists {\n\t\tartists {\n\t\t\tid\n\t\t\tbasicInformation {\n\t\t\t\tname\n\t\t\t\tprofileImageUrl\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst ArtistList = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(ALL_ARTISTS_QUERY);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 5,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, data && data.artists.map(artist => {\n    return __jsx(Grid, {\n      key: artist.id,\n      item: true,\n      xs: 12,\n      sm: 5,\n      md: 3,\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(ArtistItem, {\n      id: artist.id,\n      profileImageUrl: artist.basicInformation.profileImageUrl,\n      name: artist.basicInformation.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default ArtistList;","map":{"version":3,"sources":["/home/paul/Documents/Coding/agency-website/components/artist-list.tsx"],"names":["Grid","gql","ArtistItem","useQuery","ALL_ARTISTS_QUERY","ArtistList","loading","error","data","artists","map","artist","id","basicInformation","profileImageUrl","name"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,OAAO,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;CAA9B;;AAWP,MAAMI,UAAU,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,iBAAD,CAAzC;AACA,SACC,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEI,IAAI,IACJA,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAiB;AACjC,WACC,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAlB;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAmC,MAAA,EAAE,EAAE,CAAvC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,UAAD;AACC,MAAA,EAAE,EAAED,MAAM,CAACC,EADZ;AAEC,MAAA,eAAe,EAAED,MAAM,CAACE,gBAAP,CAAwBC,eAF1C;AAGC,MAAA,IAAI,EAAEH,MAAM,CAACE,gBAAP,CAAwBE,IAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AASA,GAVD,CAFF,CADD;AAgBA,CAlBD;;AAoBA,eAAeV,UAAf","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport gql from \"graphql-tag\";\nimport ArtistItem from \"./artist-item\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Link from \"next/link\";\n\nexport const ALL_ARTISTS_QUERY = gql`\n\tquery Artists {\n\t\tartists {\n\t\t\tid\n\t\t\tbasicInformation {\n\t\t\t\tname\n\t\t\t\tprofileImageUrl\n\t\t\t}\n\t\t}\n\t}\n`;\nconst ArtistList = () => {\n\tconst { loading, error, data } = useQuery(ALL_ARTISTS_QUERY);\n\treturn (\n\t\t<Grid container spacing={5} direction=\"row\">\n\t\t\t{data &&\n\t\t\t\tdata.artists.map((artist: any) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Grid key={artist.id} item xs={12} sm={5} md={3} lg={2}>\n\t\t\t\t\t\t\t<ArtistItem\n\t\t\t\t\t\t\t\tid={artist.id}\n\t\t\t\t\t\t\t\tprofileImageUrl={artist.basicInformation.profileImageUrl}\n\t\t\t\t\t\t\t\tname={artist.basicInformation.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</Grid>\n\t);\n};\n\nexport default ArtistList;\n"]},"metadata":{},"sourceType":"module"}